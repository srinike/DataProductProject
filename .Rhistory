install.packages('tm')
install.packages('tm')
install.packages('tm')
install.packages('tm')
install.packages('tm')
data(AlzheimerDisease)
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
install.packages("caret")
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis, p = 0.50)
training = adData[trainIndex,]
testing = adData[-trainIndex,]
adData = data.frame(diagnosis,predictors)
testIndex = createDataPartition(diagnosis, p = 0.50,list=FALSE)
training = adData[-testIndex,]
testing = adData[testIndex,]
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis,p=0.5,list=FALSE)
training = adData[trainIndex,]
testing = adData[trainIndex,]
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis,p=0.5,list=FALSE)
training = adData[trainIndex,]
testing = adData[trainIndex,]
library(AppliedPredictiveModeling)
data(concrete)
library(caret)
set.seed(1000)
inTrain = createDataPartition(mixtures$CompressiveStrength, p = 3/4)[[1]]
training = mixtures[ inTrain,]
testing = mixtures[-inTrain,]
hist(concrete$Superplasticizer)
hist(training$Superplasticizer)
hist(concrete$Superplasticizer)
hist(training$Superplasticizer)
hist(concrete$Superplasticizer)
hist(training$Superplasticizer)
library(caret)
library(AppliedPredictiveModeling)
set.seed(3433)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
library(caret)
library(AppliedPredictiveModeling)
set.seed(3433)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
library(caret)
library(AppliedPredictiveModeling)
set.seed(3433)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
library(caret)
library(AppliedPredictiveModeling)
set.seed(3433)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
head(predictors)
View(predictors)
preProcess(training, method = "pca")
preProcess(predictors, method = "pca")
newpredictors = predictors[,c(5,7)]
View(predictors)
newpredictors = predictors[,c(55)]
newpredictors = predictors[,c(55,65)]
View(newpredictors)
c(2|3)
c(2..3)
c(2,3)
c(2,7)
c(2:3)
c(2:8)
newpredictors = predictors[,c(55:65)]
View(newpredictors)
newpredictors = predictors[,c(57:65)]
newpredictors = predictors[,c(57:66)]
newpredictors = predictors[,c(57:67)]
newpredictors = predictors[,c(57:70)]
newpredictors = predictors[,c(57:69)]
newpredictors = predictors[,c(57:68)]
preProcess(newpredictors, method = "pca")
?preProcess
preProcess(newpredictors, method = "pca", thresh = 0.90)
testing = adData[-inTrain,]
library(caret)
library(AppliedPredictiveModeling)
set.seed(3433)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
View(adData)
newpredictors = predictors[,c(55:70)]
View(newpredictors)
newpredictors = predictors[,c(57:70)]
View(newpredictors)
newpredictors = predictors[,c(57:68)]
View(newpredictors)
newtraining = traninig[, c(1,57:68)]
newtraining = training[, c(1,57:68)]
View(newtraining)
View(training)
newtraining = training[, c(1,58:69)]
View(newtraining)
preProcess(newpredictors, method = "pca", thresh = 0.80)
?train
train(training, method = "glm", preProcess = "pca", data=training)
train(training$diagnosis=., method = "glm", preProcess = "pca", data=training)
train(training$diagnosis~., method = "glm", preProcess = "pca", data=training)
preProc = preProcess(newtraining[,c(2:13), thresh=0.8])
preProc = preProcess(newtraining[,c(2:13)], thresh=0.85)
preProc
preProcess(newtraining[,c(2:13)], thresh=0.85)
preProcess(newtraining[,c(2:13)], method="pca", thresh=0.85)
preProc = preProcess(newtraining[,c(2:13)], method="pca", thresh=0.85)
preProc
predict(preProc, testing)
testpc = predict(preProc, testing)
testpc
trainpc = predict(preProd, training)
trainpc = predict(preProc, training)
modelFit = train(training$diagnosis ~ .,method="glm", data = trainpc )
?requireNamespaceQuietStop
??requireNamespaceQuietStop
install.packages("e1071")
modelFit = train(training$diagnosis ~ .,method="glm", data = trainpc )
confusionMatrix(testing$diagnosis, predict(modelFit, testpc))
preProcess(newtraining[,c(2:13)], method="pca", thresh=0.80)
trainpc = predict(preProc, training)
modelFit = train(training$diagnosis ~ .,method="glm", data = trainpc )
testpc = predict(preProc, testing)
confusionMatrix(testing$diagnosis, predict(modelFit, testpc))
setwd("C:/Srini/Srini/Coursera/9-1-DevelopingDataProducts/Project")
library(shiny)
install.packages("shiny")
library(shiny)
getwd()
runApp()
runApp()
library(tm)
#library(SnowballC)
library(wordcloud)
documentText = read.table("sample1.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
plainDocument <- tm_map(documentTextCorpus, PlainTextDocument)
library(tm)
#library(SnowballC)
library(wordcloud)
documentText = read.table("sample1.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
wordcloud(jeopCorpus, max.words = 100, random.order = FALSE)
library(tm)
#library(SnowballC)
library(wordcloud)
documentText = read.table("sample1.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
wordcloud(mainDocumentCorpus, max.words = 100, random.order = FALSE)
library(tm)
#library(SnowballC)
library(wordcloud)
documentText = read.table("sample1.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
wordcloud(mainDocumentCorpus, max.words = 100, random.order = TRUE)
library(tm)
#library(SnowballC)
library(wordcloud)
documentText = read.table("sample1.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
wordcloud(mainDocumentCorpus, max.words = 100, random.order = FALSE)
library(tm)
#library(SnowballC)
library(wordcloud)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
wordcloud(mainDocumentCorpus, max.words = 100, random.order = FALSE)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
library(tm)
#library(SnowballC)
library(wordcloud)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
wordcloud(mainDocumentCorpus, max.words = 100, random.order = FALSE)
library(tm)
#library(SnowballC)
library(wordcloud)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
wordcloud(mainDocumentCorpus, max.words = 100, random.order = FALSE)
library(tm)
#library(SnowballC)
library(wordcloud)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
wordcloud(mainDocumentCorpus, random.order = TRUE)
library(tm)
#library(SnowballC)
library(wordcloud)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
wordcloud(mainDocumentCorpus, random.order = TRUE)
library(tm)
#library(SnowballC)
library(wordcloud)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
wordcloud(mainDocumentCorpus, random.order = TRUE)
library(tm)
#library(SnowballC)
library(wordcloud)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
wordcloud(mainDocumentCorpus, random.order = TRUE)
library(tm)
#library(SnowballC)
library(wordcloud)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
wordcloud(mainDocumentCorpus, random.order = TRUE)
library(tm)
library(wordcloud)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
cloud = wordcloud(mainDocumentCorpus, random.order = TRUE)
library(tm)
library(wordcloud)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
cloud = wordcloud(mainDocumentCorpus, random.order = TRUE)
cloud
library(tm)
library(wordcloud)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
png("wordcloud.png", width=1280,height=800)
wordcloud(mainDocumentCorpus, random.order = TRUE)
library(tm)
library(wordcloud)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
png("wordcloud.png", width=1280,height=800)
wordcloud(mainDocumentCorpus, random.order = TRUE)
dev.off()
library(tm)
library(wordcloud)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
png("wordcloud1.png", width=1280,height=800)
wordcloud(mainDocumentCorpus, random.order = TRUE)
dev.off()
?wordcloud
library(tm)
library(wordcloud)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
png("wordcloud1.png", width=1280,height=800)
wordcloud(mainDocumentCorpus, random.order = TRUE, colors = pal)
dev.off()
library(tm)
library(tm)
library(wordcloud)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
png("wordcloud1.png", width=1280,height=800)
wordcloud(mainDocumentCorpus, random.order = TRUE, colors = pal12)
dev.off()
library(tm)
library(wordcloud)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
png("wordcloud1.png", width=1280,height=800)
wordcloud(mainDocumentCorpus, random.order = TRUE, colors = pal2)
dev.off()
library(tm)
library(wordcloud)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
png("wordcloud1.png", width=1280,height=800)
wordcloud(mainDocumentCorpus, random.order = TRUE, colors = colors)
dev.off()
library(tm)
library(wordcloud)
require(RColorBrewer)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
png("wordcloud1.png", width=1280,height=800)
wordcloud(mainDocumentCorpus, random.order = TRUE, colors = pal2)
dev.off()
library(tm)
library(wordcloud)
require(RColorBrewer)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
png("wordcloud1.png", width=1280,height=800)
wordcloud(mainDocumentCorpus, random.order = TRUE, colors=pal2)
dev.off()
library(tm)
library(wordcloud)
require(RColorBrewer)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
png("wordcloud1.png", width=1280,height=800)
wordcloud(mainDocumentCorpus, random.order = TRUE, colors=brewer.pal(8, "Dark2"))
dev.off()
library(tm)
library(wordcloud)
require(RColorBrewer)
documentText = read.table("resume.txt", sep="\t", fill=FALSE, strip.white=TRUE)
documentTextCorpus = Corpus(VectorSource(documentText))
mainDocumentCorpus <- tm_map(documentTextCorpus, PlainTextDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removePunctuation)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, stemDocument)
mainDocumentCorpus <- tm_map(mainDocumentCorpus, removeWords, stopwords('english'))
png("wordcloud1.png", width=1280,height=800)
wordcloud(mainDocumentCorpus, random.order = TRUE, colors=brewer.pal(8, "Dark2"))
plat = renderPlot(wordcloud(mainDocumentCorpus, random.order = TRUE, colors=brewer.pal(8, "Dark2")))
dev.off()
runApp()
runApp()
?headerPanel
runa
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?wordcloud
runApp()
?pageWithSidebar
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
runApp()
shinyapps::setAccountInfo(name='resumecover', token='D33AA1079A91519C47CEDA9066F0C8F5', secret='TuUkVwjivdlXzreCFxyRRY0n6befk/zYJQ3bYDEy')
library(shinyapps)
?deployApp
deployApp()
runApp()
runApp()
deployApp()
deployApp()
deployApp()
install.packages("knitr")
setwd("C:/Srini/Srini/Coursera/9-1-DevelopingDataProducts/Project/DataProductProject")
